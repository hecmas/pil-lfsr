include "config.pil";

// TODO: Check that period is correct
namespace LFSR(%N);
    pol commit taps[10];
    pol commit state[10];
    pol commit xor;

    pol constant ISBEFORELAST;   // 0, 0, ..., 0, 1, 0

    // A table with all the xors of bits up to 2^N
    pol constant INPUT0, INPUT1, INPUT2, INPUT3, INPUT4, INPUT5, INPUT6, INPUT7, INPUT8, INPUT9;
    pol constant OUTPUT;

    taps[0] * (1 - taps[0]) = 0;
    taps[1] * (1 - taps[1]) = 0;
    taps[2] * (1 - taps[2]) = 0;
    taps[3] * (1 - taps[3]) = 0;
    taps[4] * (1 - taps[4]) = 0;
    taps[5] * (1 - taps[5]) = 0;
    taps[6] * (1 - taps[6]) = 0;
    taps[7] * (1 - taps[7]) = 0;
    taps[8] * (1 - taps[8]) = 0;
    taps[9] * (1 - taps[9]) = 0;

    taps[0]' = taps[0];
    taps[1]' = taps[1];
    taps[2]' = taps[2];
    taps[3]' = taps[3];
    taps[4]' = taps[4];
    taps[5]' = taps[5];
    taps[6]' = taps[6];
    taps[7]' = taps[7];
    taps[8]' = taps[8];
    taps[9]' = taps[9];

    state[0] * (1 - state[0]) = 0;
    state[1] * (1 - state[1]) = 0;
    state[2] * (1 - state[2]) = 0;
    state[3] * (1 - state[3]) = 0;
    state[4] * (1 - state[4]) = 0;
    state[5] * (1 - state[5]) = 0;
    state[6] * (1 - state[6]) = 0;
    state[7] * (1 - state[7]) = 0;
    state[8] * (1 - state[8]) = 0;
    state[9] * (1 - state[9]) = 0;

    ISBEFORELAST * (1 - ISBEFORELAST) = 0;

    (1 - ISBEFORELAST) * (state[0]' - xor) = 0; 
    (1 - ISBEFORELAST) * (state[1]' - state[0]) = 0;
    (1 - ISBEFORELAST) * (state[2]' - state[1]) = 0;
    (1 - ISBEFORELAST) * (state[3]' - state[2]) = 0;
    (1 - ISBEFORELAST) * (state[4]' - state[3]) = 0;
    (1 - ISBEFORELAST) * (state[5]' - state[4]) = 0;
    (1 - ISBEFORELAST) * (state[6]' - state[5]) = 0;
    (1 - ISBEFORELAST) * (state[7]' - state[6]) = 0;
    (1 - ISBEFORELAST) * (state[8]' - state[7]) = 0;
    (1 - ISBEFORELAST) * (state[9]' - state[8]) = 0;

    ISBEFORELAST * (state[0]' - state[0]) = 0;
    ISBEFORELAST * (state[1]' - state[1]) = 0;
    ISBEFORELAST * (state[2]' - state[2]) = 0;
    ISBEFORELAST * (state[3]' - state[3]) = 0;
    ISBEFORELAST * (state[4]' - state[4]) = 0;
    ISBEFORELAST * (state[5]' - state[5]) = 0;
    ISBEFORELAST * (state[6]' - state[6]) = 0;
    ISBEFORELAST * (state[7]' - state[7]) = 0;
    ISBEFORELAST * (state[8]' - state[8]) = 0;
    ISBEFORELAST * (state[9]' - state[9]) = 0;

    {taps[0]*state[0], taps[1]*state[1], taps[2]*state[2], taps[3]*state[3], taps[4]*state[4], 
     taps[5]*state[5], taps[6]*state[6], taps[7]*state[7], taps[8]*state[8], taps[9]*state[9], xor} in 
    {INPUT0, INPUT1, INPUT2, INPUT3, INPUT4, INPUT5, INPUT6, INPUT7, INPUT8, INPUT9, OUTPUT};